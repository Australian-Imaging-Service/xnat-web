#
# web: xnat-conf.properties
# XNAT http://www.xnat.org
# Copyright (c) 2005-2017, Washington University School of Medicine and Howard Hughes Medical Institute
# All Rights Reserved
#  
# Released under the Simplified BSD.
#
datasource.driver=org.postgresql.Driver
datasource.url=jdbc:postgresql://localhost/xnat
datasource.username=xnat
datasource.password=xnat

hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect
hibernate.hbm2ddl.auto=update
hibernate.show_sql=false
hibernate.cache.use_second_level_cache=true
hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
hibernate.cache.use_query_cache=true

# Other useful properties include:
#
# scheduling.thread.pool.size: Defaults to 4
# scheduling.wait.for.termination.seconds: Defaults to 0 (off)
#
# spring.activemq.broker-url: Defaults to "vm://localhost" (in-process queue)
# spring.activemq.user: Defaults to "" (no name specified)
# spring.activemq.password: Defaults to "" (no password specified)
#
# amq.usage.temp: Defaults to "128mb"
# amq.usage.mem: Defaults to "512mb"
# amq.usage.store: Defaults to "1gb"
#
# The following property tells XNAT to save the SQL generated for initializing or updating
# the XNAT database schema on start-up. Just specifying xnat.database.sql.log results in
# the generated SQL being written to ${xnat.home}/xnat-timestamp.sql. Specifying a value
# for xnat.database.sql.log.folder results in the generated SQL being written to the file
# ${xnat.database.sql.log.folder}/xnat-timestamp.sql. Finally specifying a value for
# xnat.database.sql.log.file results in the generated SQL being written to the specified
# file. You can add a timestamp to the specified file by inserting ${timestamp} into
# the file name, e.g. xnat-file-${timestamp}.sql.
#
# xnat.database.sql.log=true
# xnat.database.sql.log.folder=/data/xnat/home
# xnat.database.sql.log.file=/data/xnat/home/xnat-override.sql
