<?xml version="1.0" encoding="UTF-8"?>
<!--suppress SpringSecurityFiltersConfiguredInspection -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:property-placeholder location="WEB-INF/conf/services.properties,WEB-INF/conf/services-custom.properties" ignore-resource-not-found="true" ignore-unresolvable="true" />

    <context:annotation-config />

    <util:list id="decisionVoters">
        <ref bean="roleVoter"/>
        <ref bean="authenticatedVoter"/>
    </util:list>

    <bean class="org.springframework.security.access.vote.UnanimousBased" id="unanimousBased" c:decisionVoters-ref="decisionVoters"/>

    <bean class="org.springframework.security.access.vote.RoleVoter" id="roleVoter" p:rolePrefix="ROLE_"/>

    <bean class="org.springframework.security.access.vote.AuthenticatedVoter" id="authenticatedVoter"/>

    <bean class="org.nrg.xnat.security.OnXnatLogin" id="logUserLogin"/>

    <bean class="org.nrg.xnat.security.XnatUrlAuthenticationFailureHandler" id="authFailure">
        <constructor-arg value="/app/template/Login.vm?failed=true" />
        <constructor-arg value="/app/template/PostRegister.vm" />
    </bean> 

    <bean id="loginUrlAuthenticationEntryPoint" class="org.nrg.xnat.security.XnatAuthenticationEntryPoint" c:loginFormUrl="/app/template/Login.vm">
        <property name="dataPaths">
            <list value-type="java.lang.String">
                <value>/data/**</value>
                <value>/REST/**</value>
                <value>/fs/**</value>
            </list>
        </property>
        <property name="interactiveAgents">
            <list value-type="java.lang.String">
                <value>.*MSIE.*</value>
                <value>.*Mozilla.*</value>
                <value>.*AppleWebKit.*</value>
                <value>.*Opera.*</value>
            </list>
        </property>
    </bean>

    <bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter" c:sessionRegistry-ref="sessionRegistry" c:expiredUrl="/app/template/Login.vm" />
    <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
    <bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
        <constructor-arg name="sessionRegistry" ref="sessionRegistry" />
        <property name="maximumSessions" value="${security.sessions.concurrent_max}"/>
        <property name="exceptionIfMaximumExceeded" value="true"/>
    </bean>
    <bean id="xnatLogoutSuccessHandler" class="org.nrg.xnat.security.XnatLogoutSuccessHandler" p:openXnatLogoutSuccessUrl="/" p:securedXnatLogoutSuccessUrl="/app/template/Login.vm"/>
    <bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg name="logoutSuccessHandler" ref="xnatLogoutSuccessHandler" type="org.springframework.security.web.authentication.logout.LogoutSuccessHandler"/>
        <constructor-arg name="handlers">
            <list>
                <ref bean="xnatLogoutHandler"/>
                <ref bean="securityContextLogoutHandler"/>
            </list>
        </constructor-arg>
        <property name="filterProcessesUrl" value="/app/action/LogoutUser" />
    </bean>
    <bean id="securityContextLogoutHandler" class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler">
        <property name="invalidateHttpSession" value="true" />
    </bean>  
    <bean id="xnatLogoutHandler" class="org.nrg.xnat.security.XnatLogoutHandler"/>

    <security:http auto-config="false" use-expressions="true" entry-point-ref="loginUrlAuthenticationEntryPoint">
        <security:csrf disabled="true"/>
        <security:custom-filter position="CHANNEL_FILTER" ref="channelProcessingFilter"/>
        <security:custom-filter before="FORM_LOGIN_FILTER" ref="customAuthenticationFilter"/>
        <security:custom-filter after="BASIC_AUTH_FILTER" ref="customBasicAuthenticationFilter"/>
		<security:custom-filter before="REMEMBER_ME_FILTER" ref="xnatInitCheckFilter"/>
		<security:custom-filter after="SECURITY_CONTEXT_FILTER" ref="expiredPasswordFilter"/>
        <security:custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
        <security:custom-filter position="LOGOUT_FILTER" ref="logoutFilter" />
        <security:session-management session-authentication-strategy-ref="sas"/>
        <security:headers>
            <security:frame-options policy="SAMEORIGIN" />
            <security:hsts disabled="true"/>
        </security:headers>
    </security:http>

    <bean class="org.nrg.xnat.security.FilterSecurityInterceptorBeanPostProcessor">
        <property name="openUrls">
            <list>
                <value>/app/action/AcceptProjectAccess/par/*</value>
                <value>/app/action/ModifyPassword*</value>
                <value>/app/action/XDATForgotLogin*</value>
                <value>/app/action/XDATRegisterUser*</value>
                <value>/app/action/InactiveAccountEmail*</value>
                <value>/app/template/XDATScreen_UpdateUser.vm*</value>
                <value>/app/template/Error.vm*</value>
                <value>/app/template/ForgotLogin.vm*</value>
                <value>/app/template/Login.vm*</value>
                <value>/app/template/PostRegister.vm*</value>
                <value>/app/template/InactiveAccount.vm*</value>
                <value>/app/template/Register.vm*</value>
                <value>/app/template/ResendEmail.vm*</value>
                <value>/app/template/ResendVerification.vm*</value>
                <value>/app/template/VerificationSent.vm*</value>
                <value>/app/template/VerifyEmail.vm*</value>
                <value>/favicon.ico</value>
                <value>/data/version</value>
                <value>/REST/version</value>
                <value>/data/JSESSION</value>
                <value>/REST/JSESSION</value>
                <value>/data/services/auth*</value>
                <value>/REST/services/auth*</value>
                <value>/data/services/sendemailverification*</value>
                <value>/REST/services/sendemailverification*</value>
                <value>/images/**</value>
                <value>/scripts/**</value>
                <value>/style/**</value>
                <value>/themes/**</value>
                <value>/files/**</value>
                <value>/pages/**</value>
                <value>/page/**</value>
                <value>/applet/**</value>
            </list>
        </property>
        <property name="adminUrls">
            <list>
                <value>/app/template/AdminSummary.vm*</value>
                <value>/app/template/Configuration.vm*</value>
                <value>/app/template/XDATScreen_EditScript.vm/user/Test*</value>
                <value>/app/template/XDATScreen_active_sessions.vm*</value>
                <value>/app/template/XDATScreen_admin.vm*</value>
                <value>/app/template/XDATScreen_admin_options.vm*</value>
                <value>/app/template/XDATScreen_admin_projectAccess.vm*</value>
                <value>/app/template/XDATScreen_bundles.vm*</value>
                <value>/app/template/XDATScreen_dataTypes.vm*</value>
                <value>/app/template/XDATScreen_email.vm*</value>
                <value>/app/template/XDATScreen_emailSpecifications.vm*</value>
                <value>/app/template/XDATScreen_groups.vm*</value>
                <value>/app/template/XDATScreen_manage_info.vm*</value>
                <value>/app/template/XDATScreen_manage_news.vm*</value>
                <value>/app/template/XDATScreen_manage_pipeline.vm*</value>
                <value>/app/template/XDATScreen_roles.vm*</value>
                <value>/monitoring*</value>
                <value>/setup/**</value>
            </list>
        </property>
    </bean>

    <bean id="channelProcessingFilter" class="org.nrg.xnat.security.TranslatingChannelProcessingFilter">
        <property name="channelDecisionManager">
            <bean class="org.springframework.security.web.access.channel.ChannelDecisionManagerImpl">
                <property name="channelProcessors">
                    <list>
                        <bean class="org.springframework.security.web.access.channel.SecureChannelProcessor"/>
                        <bean class="org.springframework.security.web.access.channel.InsecureChannelProcessor"/>
                    </list>
                </property>
            </bean>
        </property>
        <property name="requiredChannel" value="${security.channel}" />
    </bean>

    <bean id="servicesProperties" class="org.nrg.xnat.security.config.PropertyAggregator">
        <constructor-arg name="fileNames">
            <util:list>
                <value>WEB-INF/conf/services.properties</value>
                <value>WEB-INF/conf/services-custom.properties</value>
            </util:list>
        </constructor-arg>
    </bean>

    <bean id="aliasTokenAuthProvider" class="org.nrg.xnat.security.alias.AliasTokenAuthenticationProvider" p:name="token"/>

    <bean id="databaseAuthenticationProviderConfigurator" class="org.nrg.xnat.security.config.DatabaseAuthenticationProviderConfigurator" p:configuratorId="db"/>
    <bean id="ldapAuthenticationProviderConfigurator" class="org.nrg.xnat.security.config.LdapAuthenticationProviderConfigurator" p:configuratorId="ldap"/>

    <bean id="providerAggregator" class="org.nrg.xnat.security.config.AuthenticationProviderAggregator">
        <constructor-arg name="standaloneProviders">
            <list value-type="org.springframework.security.authentication.AuthenticationProvider">
                <ref bean="aliasTokenAuthProvider"/>
            </list>
        </constructor-arg>
        <constructor-arg name="configurators">
            <map key-type="java.lang.String" value-type="org.nrg.xnat.security.config.AuthenticationProviderConfigurator">
                <entry key="db" value-ref="databaseAuthenticationProviderConfigurator"/>
                <entry key="ldap" value-ref="ldapAuthenticationProviderConfigurator"/>
            </map>
        </constructor-arg>
        <constructor-arg name="properties" ref="servicesProperties"/>
    </bean>

    <bean id="customAuthenticationManager" name="org.springframework.security.authenticationManager" class="org.nrg.xnat.security.XnatProviderManager"
          c:providers-ref="providerAggregator" c:properties-ref="servicesProperties" />

    <bean id="customAuthenticationFilter" class="org.nrg.xnat.security.XnatAuthenticationFilter">
        <property name="authenticationManager" ref="customAuthenticationManager" />
        <property name="authenticationSuccessHandler" ref="logUserLogin" />
        <property name="authenticationFailureHandler" ref="authFailure" />
        <property name="sessionAuthenticationStrategy" ref="sas" />
    </bean>

    <bean id="customBasicAuthenticationFilter" class="org.nrg.xnat.security.XnatBasicAuthenticationFilter" c:manager-ref="customAuthenticationManager" c:entryPoint-ref="loginUrlAuthenticationEntryPoint">
        <property name="sessionAuthenticationStrategy" ref="sas" />
    </bean>

	<bean id="expiredPasswordFilter" class="org.nrg.xnat.security.XnatExpiredPasswordFilter">
        <property name="changePasswordPath" value="/app/template/XDATScreen_UpdateUser.vm"/>
        <property name="changePasswordDestination" value="/app/action/ModifyPassword"/>
        <property name="logoutDestination" value="/app/action/LogoutUser"/>
        <property name="loginPath" value="/app/template/Login.vm"/>
        <property name="loginDestination" value="/app/action/XDATLoginUser"/>
        <property name="inactiveAccountPath" value="/app/template/InactiveAccount.vm"/>
        <property name="inactiveAccountDestination" value="/app/action/XnatInactiveAccount"/>
        <property name="emailVerificationPath" value="/app/template/VerifyEmail.vm"/>
        <property name="emailVerificationDestination" value="/data/services/sendEmailVerification"/>
    </bean>
	
	<bean id="xnatInitCheckFilter" class="org.nrg.xnat.security.XnatInitCheckFilter">
        <property name="initializationPath" value="/services/settings/initialize"/>
        <!--<property name="configurationPath" value="/app/template/Configuration.vm"/>-->
        <property name="configurationPath" value="/setup"/>
        <property name="nonAdminErrorPath" value="/app/template/Unconfigured.vm"/>
        <property name="exemptedPaths">
            <list value-type="java.lang.String">
                <value>/app/template/XDATScreen_UpdateUser.vm</value>
                <value>/app/action/ModifyPassword</value>
                <value>/app/template/Login.vm</value>
                <value>/login</value>
            </list>
        </property>
    </bean>
	
    <bean id="customDatabaseService" class="org.nrg.xnat.security.userdetailsservices.XnatDatabaseUserDetailsService" p:dataSource-ref="dataSource"/>

</beans>
